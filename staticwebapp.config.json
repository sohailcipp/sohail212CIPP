{
  "routes": [
    {
      "route": "_next/static/*",
      "headers": {
        "cache-control": "must-revalidate, max-age=15770000"
      }
    },
    {
      "route": "*.{png,jpg,gif,xml,ico,css,js}",
      "headers": {
        "cache-control": "must-revalidate, max-age=15770000"
      }
    },
    {
      "route": "/assets/*",
      "headers": {
        "cache-control": "must-revalidate, max-age=15770000"
      }
    },
    {
      "route": "/login",
      "rewrite": "/.auth/login/aad"
    },
    {
      "route": "/logout",
      "redirect": "/.auth/logout?post_logout_redirect_uri=/LogoutRedirect"
    },
    {
      "route": "/.auth/me",
      "allowedRoles": ["authenticated", "contributor", "admin"]
    },
    {
      "route": "/authredirect",
      "allowedRoles": ["anonymous", "authenticated", "contributor"]
    },
    {
      "route": "/LogoutRedirect",
      "allowedRoles": ["anonymous", "authenticated", "contributor"]
    },
    {
      "route": "/api/Public*",
      "allowedRoles": ["anonymous", "authenticated", "contributor"]
    },
    {
      "route": "/api/*",
      "allowedRoles": ["authenticated", "contributor"]
    },
    {
      "route": "*",
      "allowedRoles": ["anonymous", "authenticated", "contributor", "admin", "editor", "readonly"]
    }
  ],
  "navigationFallback": {
    "rewrite": "index.html",
    "exclude": [
      "_next/static/*",
      "/css/*",
      "public/*",
      "assets/*",
      "favicon.ico",
      "robots.txt",
      "sitemap.xml",
      "manifest.json"
    ]
  },
  "responseOverrides": {
    "401": {
      "redirect": "/.auth/login/aad?post_login_redirect_uri=.referrer",
      "statusCode": 302
    },
    "403": {
      "rewrite": "/403"
    },
    "404": {
      "rewrite": "/404"
    }
  },
  "globalHeaders": {
    "Access-Control-Allow-Origin": "*",
    "Access-Control-Allow-Methods": "GET, POST, PUT, DELETE, OPTIONS",
    "Access-Control-Allow-Headers": "*",
    "content-security-policy": "default-src https: blob: 'unsafe-eval' 'unsafe-inline'; object-src 'self' blob:; img-src 'self' blob: data: *"
  },
  "mimeTypes": {
    ".json": "text/json"
  }
}
